Ext.ux.GoodForm = Ext.extend(Ext.FormPanel, {
	initComponent: function() {
		this.frame = true,
		this.border = true,
		this.buttonAlign = 'center',
		this.creatGridcm();
		this.creatGoodsstore();
		this.creatGoodsgrid();
		this.creatItems();
		this.creatButtons();
		this.createRecordItem();
		this.goodsGrid.getSelectionModel().on('selectionchange', function(sm){
			Ext.getCmp('removeBtn').setDisabled(!sm.hasSelection());
		});
        Ext.ux.GoodForm.superclass.initComponent.call(this);
    },
	creatItems:function(){
		this.items = [this.goodsGrid];
	},
	creatGoodsstore:function(){
		var thiz = this;
		this.goodsstore = new Ext.data.Store({
			data:[],
			pruneModifiedRecords:true,
			reader: new Ext.data.JsonReader({fields:['rec_id','order_id','goods_id','goods_price','goods_qty','arrival_qty','return_qty','remark','goods_sn','goods_name']})
		});
	},	
	creatGridcm:function(){
		var thiz = this;
		this.cmlist = new Ext.grid.ColumnModel([{
						header : '产品编码<font color=red>*</font>',
						dataIndex:'goods_sn',
						align : 'left'
					}, {
						header:'产品名称<font color=red>*</font>',
						width:250,
						dataIndex:'goods_name',
						align:'left'
					}, {
						header:'产品数量<font color=red>*</font>',
						dataIndex:'goods_qty',
						align:'right',
						editor:new Ext.form.NumberField({
							allowBlank:false,
							allowNegative:false,
							decimalPercision:4,
							style:'text-align:left'
						})
					}, {
						header:'产品价格<font color=red>*</font>',
						dataIndex:'goods_price',
						align:'right'
					}, {
						header:'关联单据',
						dataIndex:'relate_order_sn',
						align:'right'
					}, {
						header:'产品备注',
						width:200,
						dataIndex:'remark',
						align:'left'
					}]);
	},
	removeItem:function(){
		var data = this.goodsGrid.getSelectionModel().getSelected().data;
		var index = this.goodsstore.findBy(function(record,id){
				return record.get('goods_id') == data.goods_id && record.get('goods_qty') == data.goods_qty;									
													});
		var goodsstore = this.goodsstore;
		Ext.Msg.confirm('Delete Alert!', 'Are you sure?', function(btn) {
			if (btn == 'yes') {
				goodsstore.remove(goodsstore.getAt(index));return;
			}
		}, this.goodsGrid);
	},
	
	creatGoodsgrid:function(){
		this.goodsGrid =new Ext.grid.EditorGridPanel({
					frame:false,
					id : "proListPanel",
					height : 416,
					style:'margin:0 2px 2px',
					autoWidth : true,
					cm : this.cmlist,
					sm: new Ext.grid.RowSelectionModel({singleSelect:true}),
					ds : this.goodsstore,
					clicksToEdit : 1,
					stripeRows : true,
					viewConfig : {
						forceFit : true
					},
					border : true,
					iconCls : 'icon-grid',
					tbar : new Ext.Toolbar({
						items : ['选择入库货架',{
								xtype:'combo',
								store: new Ext.data.SimpleStore({
									 fields: ["id", "key_type"],
									 data: this.depot
								}),
								valueField :"id",
								displayField: "key_type",
								mode: 'local',
								editable: false,
								forceSelection: true,
								hiddenName:'depot_id',
								triggerAction: 'all',
								fieldLabel: '仓库',
								allowBlank:false,
								pagesise:10,
								width:130,
								id:'depot'							
							},{
							text: '删除',
							iconCls: 'x-tbar-del',
							id: 'removeBtn',
							handler: this.removeItem.createDelegate(this),
							disabled:true
						}]
					})
				});
	},

	creatButtons:function(){
		this.buttons = [{
				text: '保存',
				type: 'submit', 
				handler:this.formsubmit.createDelegate(this)
			}];
	},
	
	createRecordItem:function(){
		this.recordItem=Ext.data.Record.create([{
				name:'rec_id',
				type:'float'
			},{
				name : 'goods_sn'
			}, {
				name : 'goods_id',
				type:'float'
			}, {
				name : 'goods_name'
			}, {
				name : 'goods_qty',
				type : 'float'
			}, {
				name : 'relate_order_sn',
				type : 'float'
			}, {
				name : 'remark'
			}]);
	},
	
	formsubmit:function(){
		if(!Ext.getCmp('depot').getValue()) {Ext.example.msg('Error','请先选择入库货架');return;}
		var saveURL = this.saveURL;
		var order_id = Ext.fly('porder_id').getValue();
		var m = this.goodsstore.modified.slice(0);
		var thiz = this.goodsstore;
		var jsonArray = [];
		Ext.each(m,function(item){
			jsonArray.push(item.data);				
			});
			if(jsonArray.length == 0) {
				Ext.each(thiz.data.items,function(item){
					jsonArray.push(item.data);				
					});
			}
		this.getForm().doAction('submit',{
			url:saveURL,
			method:'post',
			params:{'data':Ext.encode(jsonArray),'orderid':order_id,'depot_id':Ext.getCmp('depot').getValue()},
			success:function(form,action){
				if (action.result.success) {
						Ext.example.msg('MSG','保存成功');
					} else {
						Ext.Msg.alert('保存失败',action.result.msg);
					}
				},
			failure:function(){
					Ext.example.msg('ERROR','处理失败');
				}
		});
	}
});