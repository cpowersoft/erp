Ext.ux.EbayGrid = Ext.extend(Ext.ux.NormalGrid, {
    initComponent: function() {
        Ext.ux.EbayGrid.superclass.initComponent.call(this);
    },

    createTbar: function() {
        this.tbar = [{
            text: '创建',
            iconCls: 'x-tbar-add',
            handler: this.createRecord.createDelegate(this)
        }, {
            text: '编辑',
            iconCls: 'x-tbar-update',
			ref: '../editBtn',
			disabled:true,
            handler: this.updateRecord.createDelegate(this)
        }, {
            text: '删除',
            iconCls: 'x-tbar-del',
			ref: '../removeBtn',
			disabled:true,
            handler: this.removeRecord.createDelegate(this)
        }, {
            text: 'Ebay账户',
            iconCls: 'x-tbar-add',
            handler: this.creatEbay.createDelegate(this)
        }, {
            text: '自动分类',
            iconCls: 'x-tbar-add',
            handler: function(){
					Ext.getBody().mask("Updating Data .waiting...","x-mask-loading");
					Ext.Ajax.request({
					   url: 'index.php?model=ebayaccount&action=autotype',
					   loadMask:true,
						success:function(response,opts){
							var res = Ext.decode(response.responseText);
							Ext.getBody().unmask();
								if(res.success){
								Ext.example.msg('MSG',res.msg);
								}else{
								Ext.Msg.alert('ERROR',res.msg);
								}						
							}
						});
				}
        }];
    },
	
	createColumns: function() {
		var paypallist = this.paypallist;
        var cols = [new Ext.grid.RowNumberer(),{
						header: 'Ebay账号',
						dataIndex: 'account_name'
					}];
        for (var i = 2; i < this.fields.length; i++) {
            var f = this.fields[i];
			var h = this.headers[i];
            cols.push({
                header: h,
                dataIndex: f,
				hidden:true
            });
        }
        this.columns = cols;
    },

	creatEbay:function()
	{
		var store = this.store;
		var win = new Ext.Window({
			layout:'fit',
			title:'Ebay账号授权',
			width:280,
			height:150,
			id:'Ebaywin',
			modal: true,
			closable:true,
			closeAction:'hide',
			constrainHeader:true,
			html:'账号:<input type=text id="Ebayid"><br>输入新建账号，点击开始授权登录EBAY进行授权操作,完成后点击完成授权，在账号编辑绑定的paypal账户',
			buttons:[{
				text:'开始授权',
				handler:function(){
					Ext.getBody().mask("正在提交数据.请稍等...","x-mask-loading");
					Ext.Ajax.request({
					   url: 'index.php?model=ebayaccount&action=createbay',
					   loadMask:true,
					   params: { name: Ext.fly('Ebayid').getValue() },
						success:function(response,opts){
							var res = Ext.decode(response.responseText);
							Ext.getBody().unmask();
								if(res.success){
								window.open(res.msg);
								}else{
								Ext.Msg.alert('ERROR',res.msg);
								}						
							}
						});
					}
				},{
				text:'完成授权',
				handler:function(){
					Ext.getBody().mask("正在提交数据.请稍等...","x-mask-loading");
					Ext.Ajax.request({
					   url: 'index.php?model=ebayaccount&action=completeEbay',
					   loadMask:true,
					   params: { name: Ext.fly('Ebayid').getValue() },
						success:function(response,opts){
							var res = Ext.decode(response.responseText);
							Ext.getBody().unmask();
								if(res.success){
								Ext.example.msg('Success',res.msg);
								Ext.getCmp('Ebaywin').hide();
								store.reload();
								}else{
								Ext.Msg.alert('ERROR',res.msg);
								}						
							}
						});
					}
				}]
			});
		win.show();
	},
	createFormtiems:function(){
		var paypallist = this.paypallist;
        var items = [{
				xtype:'hidden',
                name: 'id'
					},{
                fieldLabel: 'Ebay账号',
                name: 'account_name',
				allowBlank:false
					},{
						xtype:'hidden',
						name:'type',
						value:1	
					}];
        for (var i = 2; i < this.fields.length; i++) {
            var f = this.fields[i];
			var h = this.headers[i];
            items.push({
                fieldLabel: h,
                name: f,
				allowBlank:(i<7)?false:true,
				xtype:'textarea',
				width:180,
				height:40
            });
        }
		this.formitem = items;
	}
});
Ext.ux.TbGrid = Ext.extend(Ext.ux.NormalGrid, {
    initComponent: function() {
        Ext.ux.TbGrid.superclass.initComponent.call(this);
    },
    createStore: function() {
        this.store = new Ext.data.Store({
		proxy : new Ext.data.HttpProxy({url:this.listURL}),
		autoLoad:true,
		pruneModifiedRecords:true,
        reader: new Ext.data.JsonReader({
			root: 'topics',
            totalProperty: 'totalCount',
            id: this.fields[0]
			},this.fields)
    	});
	},
    createTbar: function() {
        this.tbar = [{
            text: '创建',
            iconCls: 'x-tbar-add',
            handler: this.createRecord.createDelegate(this)
        }, {
            text: '编辑',
            iconCls: 'x-tbar-update',
			ref: '../editBtn',
			disabled:true,
            handler: this.updateRecord.createDelegate(this)
        }, {
            text: '删除',
            iconCls: 'x-tbar-del',
			ref: '../removeBtn',
			disabled:true,
            handler: this.removeRecord.createDelegate(this)
        }, {
            text: 'Taobao账户',
            iconCls: 'x-tbar-add',
            handler: this.creatTaobao.createDelegate(this)
        }];
    },
	
	createColumns: function() {
		var paypallist = this.paypallist;
        var cols = [new Ext.grid.RowNumberer(),{
						header: '淘宝账号',
						dataIndex: 'account_name'
					}];
        for (var i = 2; i < this.fields.length; i++) {
            var f = this.fields[i];
			var h = this.headers[i];
            cols.push({
                header: h,
                dataIndex: f,
				hidden:true
            });
        }
        this.columns = cols;
    },
	creatTaobao:function()
	{
		var store = this.store;
		var win = new Ext.Window({
			layout:'fit',
			title:'Taobao账号授权',
			width:280,
			height:150,
			id:'Taobaowin',
			modal: true,
			closable:true,
			closeAction:'hide',
			constrainHeader:true,
			html:'账号:<input type=text id="Tbid"><br>输入新建账号名，点击开始授权登录淘宝进行授权操作,完成后点击完成授权',
			buttons:[{
				text:'开始授权',
				handler:function(){
					Ext.getBody().mask("正在提交数据.请稍等...","x-mask-loading");
					Ext.Ajax.request({
					   url: 'index.php?model=ebayaccount&action=creatTaobao',
					   loadMask:true,
					   params: { name: Ext.fly('Tbid').getValue() },
						success:function(response,opts){
							var res = Ext.decode(response.responseText);
							Ext.getBody().unmask();
								if(res.success){
								window.open(res.msg);
								}else{
								Ext.Msg.alert('ERROR',res.msg);
								}						
							}
						});
					}
				},{
				text:'完成授权',
				handler:function(){
								Ext.getCmp('Taobaowin').hide();
								store.reload();
					}
				}]
			});
		win.show();
	},	
	createFormtiems:function(){
		var paypallist = this.paypallist;
        var items = [{
				xtype:'hidden',
                name: 'id'
					},{
                fieldLabel: '淘宝账号',
                name: 'account_name',
				allowBlank:false
					},{
						xtype:'hidden',
						name:'type',
						value:3
					}];
        for (var i = 2; i < this.fields.length-3; i++) {
            var f = this.fields[i];
			var h = this.headers[i];
            items.push({
                fieldLabel: h,
                name: f,
				allowBlank:false,
				xtype:'textarea',
				width:180,
				height:40
            });
        }
		this.formitem = items;
	}
});

Ext.ux.ZcGrid = Ext.extend(Ext.ux.NormalGrid, {
    initComponent: function() {
        Ext.ux.ZcGrid.superclass.initComponent.call(this);
    },
    createStore: function() {
        this.store = new Ext.data.Store({
		proxy : new Ext.data.HttpProxy({url:this.listURL}),
		autoLoad:true,
		pruneModifiedRecords:true,
        reader: new Ext.data.JsonReader({
			root: 'topics',
            totalProperty: 'totalCount',
            id: this.fields[0]
			},this.fields)
    	});
	},
    createTbar: function() {
        this.tbar = [{
            text: '创建',
            iconCls: 'x-tbar-add',
            handler: this.createRecord.createDelegate(this)
        }, {
            text: '编辑',
            iconCls: 'x-tbar-update',
			ref: '../editBtn',
			disabled:true,
            handler: this.updateRecord.createDelegate(this)
        }, {
            text: '删除',
            iconCls: 'x-tbar-del',
			ref: '../removeBtn',
			disabled:true,
            handler: this.removeRecord.createDelegate(this)
        }];
    },
	
	createColumns: function() {
        var cols = [new Ext.grid.RowNumberer(),{
						header: 'Zencart账号',
						dataIndex: 'account_name'
					},{
						header: '网址',
						dataIndex: 'url'
					}];
        for (var i = 3; i < this.fields.length; i++) {
            var f = this.fields[i];
			var h = this.headers[i];
            cols.push({
                header: h,
                dataIndex: f,
				hidden:true
            });
        }
        this.columns = cols;
    },
	createFormtiems:function(){
		var paypallist = this.paypallist;
        var items = [{
				xtype:'hidden',
                name: 'id'
					},{
                fieldLabel: 'Zencart账号',
                name: 'account_name',
				allowBlank:false
					},{
						xtype:'hidden',
						name:'type',
						value:4
					},{
						 fieldLabel: '网址',
						name:'url',
						allowBlank:false
					}];
		this.formitem = items;
	}
});
Ext.ux.AmzGrid = Ext.extend(Ext.ux.NormalGrid, {
    initComponent: function() {
        Ext.ux.AmzGrid.superclass.initComponent.call(this);
    },
    createStore: function() {
        this.store = new Ext.data.Store({
		proxy : new Ext.data.HttpProxy({url:this.listURL}),
		autoLoad:true,
		pruneModifiedRecords:true,
        reader: new Ext.data.JsonReader({
			root: 'topics',
            totalProperty: 'totalCount',
            id: this.fields[0]
			},this.fields)
    	});
	},
    createTbar: function() {
        this.tbar = [{
            text: '创建',
            iconCls: 'x-tbar-add',
            handler: this.createRecord.createDelegate(this)
        }, {
            text: '编辑',
            iconCls: 'x-tbar-update',
			ref: '../editBtn',
			disabled:true,
            handler: this.updateRecord.createDelegate(this)
        }, {
            text: '删除',
            iconCls: 'x-tbar-del',
			ref: '../removeBtn',
			disabled:true,
            handler: this.removeRecord.createDelegate(this)
        }];
    },
	
	createColumns: function() {
        var cols = [new Ext.grid.RowNumberer(),{
						header: 'Amazon账号',
						allowBlank:false,
						dataIndex: 'account_name'
					}];
        for (var i = 3; i < this.fields.length; i++) {
            var f = this.fields[i];
			var h = this.headers[i];
            cols.push({
                header: h,
                dataIndex: f,
				hidden:true
            });
        }
        this.columns = cols;
    },
	createFormtiems:function(){
		var sitelist = this.sitelist;
		var paypallist = this.paypallist;
        var items = [{
				xtype:'hidden',
                name: 'id'
					},{
	        xtype:'combo',
	        store: new Ext.data.SimpleStore({
	             fields: ["id", "value"],
	             data: sitelist
	        }),
	        valueField :"id",
	        displayField: "value",
	        mode: 'local',
	        editable: false,
	        forceSelection: true,
	        triggerAction: 'all',
	        hiddenName:'site',
	        fieldLabel: '站点',
	        name: 'site',
			allowBlank:false,
			blankText:'请选择'
	        },{
                fieldLabel: 'Amazon账号',
				allowBlank:false,
                name: 'account_name'
					},{
						xtype:'hidden',
						name:'type',
						value:2	
					}];
        for (var i = 3; i < this.fields.length-3; i++) {
            var f = this.fields[i];
			var h = this.headers[i];
            items.push({
                fieldLabel: h,
                name: f,
				allowBlank:(i<5)?false:true,
				xtype:'textarea',
				width:180,
				height:40
            });
        }
        for (var i = this.fields.length-3; i < this.fields.length; i++) {
            var f = this.fields[i];
			var h = this.headers[i];
            items.push({
                fieldLabel: h,
                name: f,
				allowBlank:(i<5)?false:true,
				xtype:'hidden',
				width:180,
				height:40
            });
        }
		this.formitem = items;
	}
});

Ext.ux.EzGrid = Ext.extend(Ext.ux.NormalGrid, {
    initComponent: function() {
        Ext.ux.EzGrid.superclass.initComponent.call(this);
    },
    createStore: function() {
        this.store = new Ext.data.Store({
		proxy : new Ext.data.HttpProxy({url:this.listURL}),
		autoLoad:true,
		pruneModifiedRecords:true,
        reader: new Ext.data.JsonReader({
			root: 'topics',
            totalProperty: 'totalCount',
            id: this.fields[0]
			},this.fields)
    	});
	},
    createTbar: function() {
        this.tbar = [{
            text: '创建',
            iconCls: 'x-tbar-add',
            handler: this.createRecord.createDelegate(this)
        }, {
            text: '编辑',
            iconCls: 'x-tbar-update',
			ref: '../editBtn',
			disabled:true,
            handler: this.updateRecord.createDelegate(this)
        }, {
            text: '删除',
            iconCls: 'x-tbar-del',
			ref: '../removeBtn',
			disabled:true,
            handler: this.removeRecord.createDelegate(this)
        }];
    },
	
	createColumns: function() {
        var cols = [new Ext.grid.RowNumberer(),{
						header: '普通账号',
						allowBlank:false,
						dataIndex: 'account_name'
					}];
        for (var i = 2; i < this.fields.length; i++) {
            var f = this.fields[i];
			var h = this.headers[i];
            cols.push({
                header: h,
                dataIndex: f,
				hidden:true
            });
        }
        this.columns = cols;
    },
	createFormtiems:function(){
		var sitelist = this.sitelist;
		var paypallist = this.paypallist;
        var items = [{
				xtype:'hidden',
                name: 'id'
					},{
                fieldLabel: '账号名',
				allowBlank:false,
                name: 'account_name'
					},{
						xtype:'hidden',
						name:'type',
						value:0	
					}];
		this.formitem = items;
	}
});
Ext.ux.PaypalRootGrid = Ext.extend(Ext.ux.NormalGrid, {
    initComponent: function() {
        Ext.ux.PaypalRootGrid.superclass.initComponent.call(this);
    },
    createTbar: function() {
        this.tbar = [{
            text: '创建',
            iconCls: 'x-tbar-add',
            handler: this.createRecord.createDelegate(this)
        }, {
            text: '编辑',
            iconCls: 'x-tbar-update',
			ref: '../editBtn',
			disabled:true,
            handler: this.updateRecord.createDelegate(this)
        }, {
            text: '删除',
            iconCls: 'x-tbar-del',
			ref: '../removeBtn',
			disabled:true,
            handler: this.removeRecord.createDelegate(this)
        }, {
            text: '初始化全部',
            iconCls: 'x-tbar-add',
            handler: function(){
					Ext.getBody().mask("Updating Data .waiting...","x-mask-loading");
					Ext.Ajax.request({
					   url: 'index.php?model=ebayaccount&action=autoptype',
					   loadMask:true,
						success:function(response,opts){
							var res = Ext.decode(response.responseText);
							Ext.getBody().unmask();
								if(res.success){
								Ext.example.msg('MSG',res.msg);
								}else{
								Ext.Msg.alert('ERROR',res.msg);
								}						
							}
						});
				}
        }];
	}

});
Ext.ux.AliGrid = Ext.extend(Ext.ux.NormalGrid, {
    initComponent: function() {
        Ext.ux.AliGrid.superclass.initComponent.call(this);
    },
    createStore: function() {
        this.store = new Ext.data.Store({
            proxy: new Ext.data.HttpProxy({
                url: this.listURL
            }),
            autoLoad: true,
            pruneModifiedRecords: true,
            reader: new Ext.data.JsonReader({
                root: 'topics',
                totalProperty: 'totalCount',
                id: this.fields[0]
            },
            this.fields)
        });
    },
    createTbar: function() {
        this.tbar = [{
            text: '创建',
            iconCls: 'x-tbar-add',
            handler: this.createRecord.createDelegate(this)
        },
        {
            text: '编辑',
            iconCls: 'x-tbar-update',
            ref: '../editBtn',
            disabled: true,
            handler: this.updateRecord.createDelegate(this)
        },
        {
            text: '删除',
            iconCls: 'x-tbar-del',
            ref: '../removeBtn',
            disabled: true,
            handler: this.removeRecord.createDelegate(this)
        },
        {
            text: '授权',
            iconCls: 'x-tbar-add',
            handler: this.creatTaobao.createDelegate(this)
        }];
    },
    createColumns: function() {
        var paypallist = this.paypallist;
        var cols = [new Ext.grid.RowNumberer(), {
            header: '速卖通账号',
            dataIndex: 'account_name'
        }];
        this.columns = cols;
    },
    creatTaobao: function() {
        var store = this.store;
        var win = new Ext.Window({
            layout: 'fit',
            title: '速卖通账号授权',
            width: 280,
            height: 150,
            id: 'aliauth',
            modal: true,
            closable: true,
            closeAction: 'hide',
            constrainHeader: true,
            html: 'AppKey:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type=text id="appkey"><br>输入速卖通AppKey，点击开始授权登录速卖通进行授权操作,完成后点击完成授权',
            buttons: [{
                text: '开始授权',
                handler: function() {
                    Ext.getBody().mask("正在提交数据.请稍等...", "x-mask-loading");
                    Ext.Ajax.request({
                        url: 'index.php?model=aliapi&action=auth',
                        method: 'post',
                        loadMask: true,
                        params: {
                            appkey: Ext.fly('appkey').getValue()
                        },
                        success: function(response, opts) {
                            var res = Ext.decode(response.responseText);
                            Ext.getBody().unmask();
                            if (res.success) {
                                window.open(res.msg);
                            } else {
                                Ext.Msg.alert('ERROR', res.msg);
                            }
                        }
                    });
                }
            },
            {
                text: '完成授权',
                handler: function() {
                    Ext.Ajax.request({
                        url: 'index.php?model=aliapi&action=overauth',
                        method: 'post',
                        params: {
                            appkey: Ext.fly('appkey').getValue()
                        },
                        success: function(response) {
                            var res = Ext.decode(response.responseText);
                            if (res.success) {
                                Ext.Msg.alert('提示', res.msg);
                            } else {
                                Ext.Msg.alert('ERROR', res.msg);
                            }
                        }
                    });
                    Ext.getCmp('aliauth').hide();
                    store.reload();
                }
            }]
        });
        win.show();
    },
    createFormtiems: function() {
        var paypallist = this.paypallist;
        var items = [{
			xtype:'hidden',
			name:'type',
			value:6
		},
        {
            fieldLabel: 'Aliexpress帐号名',
            name: 'account_name',
            allowBlank: false
        }];
        for (var i = 2; i < this.fields.length; i++) {
            var f = this.fields[i];
            var h = this.headers[i];
            items.push({
                fieldLabel: h,
                name: f,
                allowBlank: false,
                xtype: 'textarea',
                width: 180,
                height: 40
            });
        }
        this.formitem = items;
    }
});
